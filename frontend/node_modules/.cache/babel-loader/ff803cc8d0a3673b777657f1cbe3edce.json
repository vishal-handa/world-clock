{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vhand\\\\Documents\\\\coding assignments\\\\world-clock\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport countries from './countries';\n\nconst App = () => {\n  _s();\n\n  const [country, setCountry] = useState('');\n  const [countryID, setCountryID] = useState('');\n  const [timezone, setTimezone] = useState([]);\n\n  const getCountryByClick = event => {\n    const theID = event.target.value;\n    console.log(theID);\n    let selectedCountry = countries.find(el => theID === el.alpha2);\n    setCountry(selectedCountry.name);\n    setCountryID(selectedCountry.alpha2.toUpperCase());\n  };\n\n  useEffect(() => {\n    fetch(`/timezone/${countryID}`).then(res => res.json()).then(res => {\n      setTimezone(res.data.timezones);\n      console.log(res);\n    });\n  }, [countryID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: getCountryByClick,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select a Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), countries.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: el.alpha2,\n            id: el.alpha2,\n            children: el.name\n          }, el.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"1C9F5NiUO2w6iBlC+3gfVPPIcSA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vhand/Documents/coding assignments/world-clock/frontend/src/App.js"],"names":["React","useEffect","useState","styled","countries","App","country","setCountry","countryID","setCountryID","timezone","setTimezone","getCountryByClick","event","theID","target","value","console","log","selectedCountry","find","el","alpha2","name","toUpperCase","fetch","then","res","json","data","timezones","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,GAAG,GAAC,MAAM;AAAA;;AAEd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMU,iBAAiB,GAAEC,KAAD,IAAS;AAC/B,UAAMC,KAAK,GAACD,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAIK,eAAe,GAAEf,SAAS,CAACgB,IAAV,CAAeC,EAAE,IAAEP,KAAK,KAAGO,EAAE,CAACC,MAA9B,CAArB;AACAf,IAAAA,UAAU,CAACY,eAAe,CAACI,IAAjB,CAAV;AACAd,IAAAA,YAAY,CAACU,eAAe,CAACG,MAAhB,CAAuBE,WAAvB,EAAD,CAAZ;AACD,GAND;;AAOAvB,EAAAA,SAAS,CAAC,MAAI;AACZwB,IAAAA,KAAK,CAAE,aAAYjB,SAAU,EAAxB,CAAL,CACCkB,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMC,GAAG,IAAE;AACThB,MAAAA,WAAW,CAACgB,GAAG,CAACE,IAAJ,CAASC,SAAV,CAAX;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,KALD;AAMD,GAPQ,EAOP,CAACnB,SAAD,CAPO,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAEI,iBAAlB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGR,SAAS,CAAC2B,GAAV,CAAcV,EAAE,IAAE;AACjB,8BAAO;AAAQ,YAAA,KAAK,EAAEA,EAAE,CAACC,MAAlB;AAEC,YAAA,EAAE,EAAED,EAAE,CAACC,MAFR;AAAA,sBAGGD,EAAE,CAACE;AAHN,aACMF,EAAE,CAACE,IADT;AAAA;AAAA;AAAA;AAAA,kBAAP;AAID,SALA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvCD;;GAAMlB,G;;KAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport countries from './countries'\n\n\nconst App=() => {\n\n  const [country, setCountry]=useState('');\n  const [countryID, setCountryID]=useState('');\n  const [timezone, setTimezone]=useState([]);\n\n  const getCountryByClick=(event)=>{\n    const theID=event.target.value;\n    console.log(theID);\n    let selectedCountry= countries.find(el=>theID===el.alpha2)\n    setCountry(selectedCountry.name);\n    setCountryID(selectedCountry.alpha2.toUpperCase());\n  }\n  useEffect(()=>{\n    fetch(`/timezone/${countryID}`)\n    .then(res=>res.json())\n    .then(res=>{\n      setTimezone(res.data.timezones);\n      console.log(res);\n    });\n  },[countryID]);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <select onChange={getCountryByClick}>\n          <option>Select a Country</option>\n          {countries.map(el=>{\n            return <option value={el.alpha2}\n                    key={el.name} \n                    id={el.alpha2}\n                    >{el.name}</option>\n          })}\n        </select>\n        \n        \n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}